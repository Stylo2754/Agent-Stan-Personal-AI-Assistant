{
  "name": "Send School",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "Subject"
            },
            {
              "name": "To"
            },
            {
              "name": "Message"
            },
            {
              "name": "GcalStartTime"
            },
            {
              "name": "sendAvailability",
              "type": "boolean"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -280,
        0
      ],
      "id": "3fc75647-daca-4057-9444-1e931d0ac186",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "chatId": "7576507737",
        "text": "=Here is your draft email:\n{{ $node[\"Package Email Data\"].json.Message }}\n\n{{ $node[\"Package Email Data\"].json.attachments.length > 0 ? \"Attachments: \" + $node[\"Package Email Data\"].json.attachments[0].fileName : \"\" }}\n\n{{ $json.GcalStartTime ? \"**A 30-minute Google Calendar invite will also be sent for \" + luxon.DateTime.fromISO($json.GcalStartTime).toFormat(\"ff\") + \".**\" : \"\" }}\n\nApprove to send, or disapprove to cancel.",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Approve",
                    "additionalFields": {
                      "callback_data": "approve_send_school"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Disapprove",
                    "additionalFields": {
                      "callback_data": "disapprove"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        620,
        0
      ],
      "id": "c836c4f2-d7ed-4f3c-b86c-767ab9b90e44",
      "name": "Send Draft for Approval",
      "webhookId": "b0a8c9aa-1ca3-4297-9bcb-c6f99f683f5e",
      "credentials": {
        "telegramApi": {
          "id": "FvWprWg0WcwFYlX8",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "email-data.json",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        440,
        0
      ],
      "id": "d32e4f7a-95d3-4a44-8584-1b9c1b98be38",
      "name": "Write Files from Disk"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    binary: {\n      data: {\n        data: Buffer.from(JSON.stringify($json), 'utf8').toString('base64'),\n        mimeType: 'application/json',\n        fileName: 'email-data.json'\n      }\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        260,
        0
      ],
      "id": "e1ce1f05-1375-4720-a279-c867e190847a",
      "name": "JSON to Binary"
    },
    {
      "parameters": {
        "jsCode": "// This code gathers data from multiple previous nodes to build the final email package.\n\n// 1. Get the 'To' and 'Subject' from the original trigger of this workflow.\nconst triggerData = $node[\"When Executed by Another Workflow\"].json;\nconst to = triggerData.To;\nconst subject = triggerData.Subject;\n\n// 2. Get the 'Message' from this node's direct input.\n// This works for both regular emails and availability emails.\nconst message = $json.Message;\n\n// 3. Get GcalStartTime from the trigger as well, just in case.\nconst gcalStartTime = triggerData.GcalStartTime;\n\n// 4. Prepare the final data object.\nconst emailData = {\n  To: to,\n  Subject: subject,\n  Message: message,\n  GcalStartTime: gcalStartTime,\n  attachments: []\n};\n\n// --- The original attachment handling code (no changes needed here) ---\nconst attachmentData = triggerData.attachments;\nif (attachmentData && attachmentData.data) {\n  let finalFileName;\n  const customFileName = triggerData.CustomFileName;\n  const fileExtension = attachmentData.fileExtension || 'bin';\n  if (customFileName) {\n    finalFileName = customFileName;\n  } else {\n    finalFileName = `attachment.${fileExtension}`;\n  }\n  const finalAttachment = {\n    content: attachmentData.data.data,\n    fileName: finalFileName,\n    mimeType: attachmentData.mimeType\n  };\n  emailData.attachments.push(finalAttachment);\n}\n// --- End of attachment handling ---\n\n// Return the final packaged data.\nreturn {\n  json: emailData\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        100,
        0
      ],
      "id": "ddd51d38-2981-4c9f-ab3d-fa03d426a9ba",
      "name": "Package Email Data"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "61252e3c-fe27-4194-8498-1d3e54c6bc01",
              "leftValue": "={{ $json.sendAvailability }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -80,
        0
      ],
      "id": "f73c3471-eb26-4c4a-833e-3710c8e6b07b",
      "name": "If2"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "rgrN3c6vQZ6l9OmF",
          "mode": "list",
          "cachedResultName": "Check Availability"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "endDate": "={{ $node[\"Calculate End Date\"].json.endDate }}"
          },
          "matchingColumns": [
            "endDate"
          ],
          "schema": [
            {
              "id": "endDate",
              "displayName": "endDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        260,
        -200
      ],
      "id": "c74669c3-ac49-4a61-9b18-c9e05580d33b",
      "name": "Check Availability"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "42cf62f9-f2c6-4e3d-8b8b-c527f4c6a409",
              "name": "endDate",
              "value": "={{ $now.plus({ weeks: 2 }).toISO() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        100,
        -200
      ],
      "id": "3ae13dfd-b7a0-4a2e-b94c-8bcb365211b5",
      "name": "Calculate End Date"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "81a84131-f5af-4293-948f-a544917a162b",
              "name": "Message",
              "value": "=Hi, here is my availability for the next two weeks below, please let me know what works:{{ $node[\"Check Availability\"].json.availabilityText }}",
              "type": "string"
            },
            {
              "id": "5230fabc-96eb-4334-a059-94e4e0ee15eb",
              "name": "To",
              "value": "={{ $json.To }}",
              "type": "string"
            },
            {
              "id": "49fa2aa7-e24b-453b-b3df-8a4b738f516a",
              "name": "Subject",
              "value": "={{ $json.Subject }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        440,
        -200
      ],
      "id": "59c58241-9729-4e0c-8786-8ea6f414ac6d",
      "name": "Create Availability Message"
    }
  ],
  "pinData": {},
  "connections": {
    "Write Files from Disk": {
      "main": [
        [
          {
            "node": "Send Draft for Approval",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON to Binary": {
      "main": [
        [
          {
            "node": "Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Package Email Data": {
      "main": [
        [
          {
            "node": "JSON to Binary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Calculate End Date",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Package Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Availability": {
      "main": [
        [
          {
            "node": "Create Availability Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate End Date": {
      "main": [
        [
          {
            "node": "Check Availability",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Availability Message": {
      "main": [
        [
          {
            "node": "Package Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d2b5a00b-c39e-4ea4-a9b1-268288f93df0",
  "meta": {
    "instanceId": "bf1230323624538b0769d3beea2ee9c542c3254b35ac1ab8ba98cd4a2e0b047f"
  },
  "id": "eA37IX61XSThIXbI",
  "tags": []
}